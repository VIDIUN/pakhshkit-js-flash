{"version":3,"sources":["./flash/webpack/universalModuleDefinition","./flash/playkit-flash.js","./flash/webpack/bootstrap 7bda0d6c532cba472a51","./flash/external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"KalturaPlayer\",\"core\"]}","./flash/./index.js","./flash/./flash.js","./flash/./flashhls-adapter.js","./flash/./flash-api.js","./flash/./default-config.json"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_0__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","NAME","VERSION","Engine","undefined","_playkitJs","_flash","Flash","isSupported","registerEngine","id","_defineProperty","obj","key","writable","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","length","descriptor","protoProps","staticProps","_flashhlsAdapter","_FakeEventTarget","source","config","_this","getPrototypeOf","_el","Utils","Dom","createElement","_init","preferNative","mimetype","_hlsMimeTypes","includes","toLowerCase","version","window","ActiveXObject","GetVariable","replace","match","e","navigator","mimeTypes","enabledPlugin","plugins","description","err","parseInt","split","Promise","resolve","autoplay","mutedAutoPlay","_eventManager","EventManager","_api","FlashHLSAdapter","attach","_addBindings","_srcToLoad","url","reset","_src","_volume","_volumeBeforeMute","destroy","_this2","EventType","ABR_MODE_CHANGED","TRACKS_CHANGED","ERROR","PLAYING","TIME_UPDATE","PAUSE","LOADED_METADATA","LOADED_DATA","PLAY","VOLUME_CHANGE","WAITING","SEEKING","SEEKED","ENDED","VIDEO_TRACK_CHANGED","AUDIO_TRACK_CHANGED","forEach","eventName","listen","event","dispatchEvent","_logger","warn","audioTrack","selectAudioTrack","videoTrack","selectVideoTrack","setABR","isAdaptive","isABR","startTime","_loadPromise","load","reject","_this3","then","play","pause","currentTime","duration","set","playbackRate","debug","to","seek","getDuration","vol","_muted","volume","paused","seeking","buffered","_this4","start","end","watched","bufferLength","backBufferLength","api","getBackBufferLength","getBufferLength","mute","ended","FakeEventTarget","getLogger","_flashApi","_defaultConfig","_defaultConfig2","default","el","_firstPlay","_loadReported","flashConfig","getPropertyPath","mergeDeep","DefaultConfig","_config","_apiLoadPromise","_apiLoadResolve","swf","flashVars","params","attributes","flashVarsString","paramsString","attrsString","getOwnPropertyNames","movie","flashvars","allowScriptAccess","allowNetworking","wmode","bgColor","quality","data","width","height","parentNode","innerHTML","callback","getFlashCode","swfUrl","flashlsEvents","ready","FlashAPI","firstElementChild","_initialVolume","playerSetLogDebug","playerSetLogDebug2","levelLoaded","loadmetrics","_trigger","complete","position","timemetrics","buffer","error","code","message","Error","Severity","CRITICAL","Category","MEDIA","Code","VIDEO_ERROR","extended","manifest","levels_","audioTracks","getAudioTrackList","parsedAudioTracks","settings","active","isDefault","label","title","language","index","push","AudioTrack","videoTracks","bandwidth","bitrate","VideoTrack","_resolveLoad","tracks","concat","seekState","newState","state","flashlsCallback","args","apply","_startTime","resume","Number","NaN","setAudioTrack","selectedAudioTrack","mode","setCurrentLevel","selectedVideoTrack","getAutoLevel","getbufferLength","getbackBufferLength","payload","FakeEvent","flashObject","playerLoad","offset","playerPlay","playerPause","playerResume","playerSeek","playerStop","playerVolume","level","playerSetCurrentLevel","playerSetNextLevel","playerSetLoadLevel","len","playerSetmaxBufferLength","getPosition","getlowBufferLength","getminBufferLength","getmaxBufferLength","getLevels","getCurrentLevel","getNextLevel","getLoadLevel","getStats","trackId","playerSetAudioTrack","getLogDebug","getLogDebug2","playerSetUseHardwareVideoDecoder","getUseHardwareVideoDecoder","playerSetflushLiveURLCache","getflushLiveURLCache","playerSetJSURLStream","getJSURLStream","playerCapLeveltoStage","getCapLeveltoStage","playerSetAutoLevelCapping","getAutoLevelCapping"],"mappings":"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","file":"playkit-flash.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"playkit-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"playkit-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flash\"] = factory(require(\"playkit-js\"));\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"flash\"] = factory(root[\"KalturaPlayer\"][\"core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"playkit-js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"playkit-js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"flash\"] = factory(require(\"playkit-js\"));\n\telse\n\t\troot[\"playkit\"] = root[\"playkit\"] || {}, root[\"playkit\"][\"flash\"] = factory(root[\"KalturaPlayer\"][\"core\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_0__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 1);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NAME = exports.VERSION = exports.Engine = undefined;\n\nvar _playkitJs = __webpack_require__(0);\n\nvar _flash = __webpack_require__(2);\n\nexports.Engine = _flash.Flash;\nexports.VERSION = \"1.2.1\";\nexports.NAME = \"playkit-js-flash\";\n\n\nif (_flash.Flash.isSupported()) {\n  (0, _playkitJs.registerEngine)(_flash.Flash.id, _flash.Flash);\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Flash = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _playkitJs = __webpack_require__(0);\n\nvar _flashhlsAdapter = __webpack_require__(3);\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Flash = function (_FakeEventTarget) {\n  _inherits(Flash, _FakeEventTarget);\n\n  _createClass(Flash, null, [{\n    key: 'createEngine',\n\n\n    /**\n     * Factory method to create an engine.\n     * @param {PKMediaSourceObject} source - The selected source object.\n     * @param {Object} config - The player configuration.\n     * @returns {IEngine} - New instance of the run time engine.\n     * @public\n     * @static\n     */\n\n\n    /**\n     * The Flash class logger.\n     * @type {any}\n     * @static\n     * @private\n     */\n\n\n    /**\n     * The video element.\n     * @type {HTMLDivElement}\n     * @private\n     */\n\n\n    /**\n     * The event manager of the engine.\n     * @type {EventManager}\n     * @private\n     */\n    value: function createEngine(source, config) {\n      return new this(source, config);\n    }\n\n    /**\n     * Checks if the engine can play a given source.\n     * @param {PKMediaSourceObject} source - The source object to check.\n     * @param {boolean} preferNative - prefer native flag\n     * @returns {boolean} - Whether the engine can play the source.\n     * @public\n     * @static\n     */\n    // eslint-disable-next-line no-unused-vars\n\n    /**\n     * The supported mime types by FLASH HLS Engine.\n     * @member {Array<string>} _hlsMimeType\n     * @static\n     * @private\n     */\n\n  }, {\n    key: 'canPlaySource',\n    value: function canPlaySource(source, preferNative) {\n      if (source && source.mimetype) {\n        return typeof source.mimetype === 'string' ? Flash._hlsMimeTypes.includes(source.mimetype.toLowerCase()) : false;\n      }\n      return false;\n    }\n\n    /**\n     * empty implementation\n     * @returns {void}\n     * @private\n     * @public\n     */\n\n  }, {\n    key: 'prepareVideoElement',\n    value: function prepareVideoElement() {}\n\n    /**\n     * Checks if flash is supported.\n     * @returns {boolean} - Whether the flash engine is supported.\n     */\n\n  }, {\n    key: 'isSupported',\n    value: function isSupported() {\n      var version = '0,0,0';\n      try {\n        version = new window.ActiveXObject('ShockwaveFlash.ShockwaveFlash').GetVariable('$version').replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n      } catch (e) {\n        try {\n          if (window.navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {\n            version = (window.navigator.plugins['Shockwave Flash 2.0'] || window.navigator.plugins['Shockwave Flash']).description.replace(/\\D+/g, ',').match(/^,?(.+),?$/)[1];\n          }\n        } catch (err) {\n          // ignore\n        }\n      }\n      var majorVersion = parseInt(version.split(',')[0]);\n      return majorVersion >= 10;\n    }\n\n    /**\n     * Runs the flash capabilities tests.\n     * @returns {void}\n     * @public\n     * @static\n     */\n\n  }, {\n    key: 'runCapabilities',\n    value: function runCapabilities() {}\n\n    /**\n     * Gets the flash capabilities.\n     * @return {Promise<Object>} - The flash capabilities object.\n     * @public\n     * @static\n     */\n\n  }, {\n    key: 'getCapabilities',\n    value: function getCapabilities() {\n      return Promise.resolve(_defineProperty({}, Flash.id, { autoplay: true, mutedAutoPlay: true }));\n    }\n\n    /**\n     * @constructor\n     * @param {PKMediaSourceObject} source - The selected source object.\n     * @param {Object} config - The player configuration.\n     */\n\n  }]);\n\n  function Flash(source, config) {\n    _classCallCheck(this, Flash);\n\n    var _this = _possibleConstructorReturn(this, (Flash.__proto__ || Object.getPrototypeOf(Flash)).call(this));\n\n    _this._el = _playkitJs.Utils.Dom.createElement('div');\n    _this._init(source, config);\n    return _this;\n  }\n\n  _createClass(Flash, [{\n    key: 'hideTextTrack',\n    value: function hideTextTrack() {}\n  }, {\n    key: '_init',\n    value: function _init(source, config) {\n      this._eventManager = new _playkitJs.EventManager();\n      this._api = new _flashhlsAdapter.FlashHLSAdapter(source, config, this._el);\n      this._api.attach();\n      this._addBindings();\n      this._srcToLoad = source.url;\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      if (this._api) {\n        this._api.reset();\n      }\n      this._src = null;\n      this._volume = null;\n      this._volumeBeforeMute = null;\n      this._srcToLoad = null;\n    }\n\n    /**\n     * Restores the engine.\n     * @param {PKMediaSourceObject} source - The selected source object.\n     * @param {Object} config - The player configuration.\n     * @returns {void}\n     */\n\n  }, {\n    key: 'restore',\n    value: function restore(source, config) {\n      this.destroy();\n      this._init(source, config);\n    }\n\n    /**\n     * get the playback rates\n     * @return {number[]} - playback rates\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      if (this._api) {\n        this._api.destroy();\n        this._eventManager.destroy();\n        this.reset();\n      }\n    }\n  }, {\n    key: '_addBindings',\n    value: function _addBindings() {\n      var _this2 = this;\n\n      if (this._api) {\n        var events = [_playkitJs.EventType.ABR_MODE_CHANGED, _playkitJs.EventType.TRACKS_CHANGED, _playkitJs.EventType.ERROR, _playkitJs.EventType.PLAYING, _playkitJs.EventType.TIME_UPDATE, _playkitJs.EventType.PAUSE, _playkitJs.EventType.LOADED_METADATA, _playkitJs.EventType.LOADED_DATA, _playkitJs.EventType.PLAY, _playkitJs.EventType.VOLUME_CHANGE, _playkitJs.EventType.WAITING, _playkitJs.EventType.SEEKING, _playkitJs.EventType.SEEKED, _playkitJs.EventType.ENDED, _playkitJs.EventType.VIDEO_TRACK_CHANGED, _playkitJs.EventType.AUDIO_TRACK_CHANGED];\n        events.forEach(function (eventName) {\n          _this2._eventManager.listen(_this2._api, eventName, function (event) {\n            return _this2.dispatchEvent(event);\n          });\n        });\n      } else {\n        Flash._logger.warn('Unable to attach flash - api is missing');\n      }\n    }\n\n    /**\n     * @returns {HTMLDivElement} - The flash wrapper element.\n     * @public\n     */\n\n  }, {\n    key: 'getVideoElement',\n    value: function getVideoElement() {\n      return this._el;\n    }\n\n    /**\n     * Select an audio track\n     * @function selectAudioTrack\n     * @param {AudioTrack} audioTrack - the  audio track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectAudioTrack',\n    value: function selectAudioTrack(audioTrack) {\n      if (this._api) {\n        this._api.selectAudioTrack(audioTrack);\n      }\n    }\n\n    /**\n     * Select a video track\n     * @function selectVideoTrack\n     * @param {VideoTrack} videoTrack - the track to select\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'selectVideoTrack',\n    value: function selectVideoTrack(videoTrack) {\n      if (this._api) {\n        this._api.selectVideoTrack(videoTrack);\n      }\n    }\n\n    /**\n     * Enables adaptive bitrate\n     * @function enableAdaptiveBitrate\n     * @returns {void}\n     * @public\n     */\n\n  }, {\n    key: 'enableAdaptiveBitrate',\n    value: function enableAdaptiveBitrate() {\n      if (this._api) {\n        this._api.setABR();\n      }\n    }\n\n    /**\n     * Checking if adaptive bitrate switching is enabled.\n     * For progressive playback will always returns false.\n     * For adaptive playback will always returns true.\n     * @function isAdaptiveBitrateEnabled\n     * @returns {boolean} - Whether adaptive bitrate is enabled.\n     * @public\n     */\n\n  }, {\n    key: 'isAdaptiveBitrateEnabled',\n    value: function isAdaptiveBitrateEnabled() {\n      var isAdaptive = false;\n      if (this._api) {\n        isAdaptive = this._api.isABR();\n      }\n      return isAdaptive;\n    }\n\n    /**\n     * Set a source.\n     * @param {string} source - Source to set.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'load',\n\n\n    /**\n     * Load media.\n     * @param {number} startTime - Optional time to start the video from.\n     * @public\n     * @returns {Promise<Object>} - The loaded data\n     */\n    value: function load(startTime) {\n      if (!this._api) {\n        Flash._logger.warn('Missing API - Flash is not ready');\n        return Promise.reject('Flash is not ready');\n      }\n      this._src = this._srcToLoad;\n      this._loadPromise = this._api.load(startTime);\n      return this._loadPromise;\n    }\n\n    /**\n     * Start/resume playback.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this3 = this;\n\n      this._loadPromise.then(function () {\n        if (_this3._api) {\n          _this3._api.play();\n        }\n      });\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this._api) {\n        this._api.pause();\n      }\n    }\n\n    /**\n     * Checking if the current playback is live.\n     * @function isLive\n     * @returns {boolean} - Whether playback is live.\n     * @public\n     */\n\n  }, {\n    key: 'isLive',\n    value: function isLive() {\n      return false;\n    }\n\n    /**\n     * Get the current time in seconds.\n     * @returns {Number} - The current playback time.\n     * @public\n     */\n\n  }, {\n    key: 'getStartTimeOfDvrWindow',\n\n\n    /**\n     * Get the start time of DVR window in live playback in seconds.\n     * @returns {Number} - start time of DVR window.\n     * @public\n     */\n    value: function getStartTimeOfDvrWindow() {\n      return 0;\n    }\n\n    /**\n     * The ended property returns whether the playback of the audio/video has ended.\n     * @returns {boolean} - The ended value.\n     * @public\n     */\n\n  }, {\n    key: 'seekToLiveEdge',\n\n\n    /**\n     * Seeking to live edge.\n     * @function seekToLiveEdge\n     * @returns {void}\n     * @public\n     */\n    value: function seekToLiveEdge() {\n      this.currentTime = this.duration - 1;\n    }\n  }, {\n    key: 'playbackRates',\n    get: function get() {\n      return [1];\n    }\n\n    /**\n     * Sets the current playback speed of the audio/video.\n     * @param {Number} playbackRate - The playback speed value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'playbackRate',\n    set: function set(playbackRate) {\n      if (playbackRate != 1) {\n        Flash._logger.debug('This engine doesnt support playback rate <> 1');\n      }\n    }\n\n    /**\n     * Gets the current playback speed of the audio/video.\n     * @returns {Number} - The current playback speed value.\n     * @public\n     */\n    ,\n    get: function get() {\n      return 1;\n    }\n\n    /**\n     * Gets the default playback speed of the audio/video.\n     * @returns {Number} - The default playback speed value.\n     * @public\n     */\n\n  }, {\n    key: 'defaultPlaybackRate',\n    get: function get() {\n      return 1;\n    }\n\n    /**\n     * Get the engine's id\n     * @public\n     * @returns {string} the engine's id\n     */\n\n  }, {\n    key: 'id',\n    get: function get() {\n      return Flash.id;\n    }\n  }, {\n    key: 'src',\n    set: function set(source) {\n      this._src = source;\n    }\n\n    /**\n     * Get the source url.\n     * @returns {string} - The source url.\n     * @public\n     */\n    ,\n    get: function get() {\n      if (this._src) {\n        return this._src;\n      }\n      return '';\n    }\n  }, {\n    key: 'currentTime',\n    get: function get() {\n      if (this._api && this._api.currentTime) {\n        return this._api.currentTime;\n      }\n      return 0;\n    }\n\n    /**\n     * Set the current time in seconds.\n     * @param {Number} to - The number to set in seconds.\n     * @public\n     * @returns {void}\n     */\n    ,\n    set: function set(to) {\n      if (this._api) {\n        this._api.seek(to);\n      }\n    }\n\n    /**\n     * Get the duration in seconds.\n     * @returns {Number} - The playback duration.\n     * @public\n     */\n\n  }, {\n    key: 'duration',\n    get: function get() {\n      var duration = 0;\n      if (this._api) {\n        duration = this._api.duration ? this._api.duration : this._api.getDuration();\n      }\n      return duration;\n    }\n\n    /**\n     * Set playback volume.\n     * @param {Number} vol - The volume to set.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'volume',\n    set: function set(vol) {\n      if (this._muted) {\n        this._volumeBeforeMute = vol;\n      } else {\n        this._volume = vol;\n        if (this._api) {\n          this._api.volume(vol);\n        }\n      }\n    }\n\n    /**\n     * Get playback volume.\n     * @returns {Number} - The volume value of the video element.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this._volume || 0;\n    }\n\n    /**\n     * Get paused state.\n     * @returns {boolean} - The paused value of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'paused',\n    get: function get() {\n      if (this._api) {\n        return this._api.paused;\n      }\n      return true;\n    }\n\n    /**\n     * Get seeking state.\n     * @returns {boolean} - The seeking value of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'seeking',\n    get: function get() {\n      if (this._api) {\n        return this._api.seeking;\n      }\n      return false;\n    }\n\n    /**\n     * Get the first seekable range (part) of the video in seconds.\n     * @returns {TimeRanges} - First seekable range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'seekable',\n    get: function get() {\n      return this.buffered;\n    }\n\n    /**\n     * Get the first played range (part) of the video in seconds.\n     * @returns {TimeRanges} - First played range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'played',\n    get: function get() {\n      var _this4 = this;\n\n      return {\n        length: 1,\n        start: function start() {\n          return 0;\n        },\n        end: function end() {\n          if (_this4._api) {\n            return _this4._api.watched;\n          } else return 0;\n        }\n      };\n    }\n\n    /**\n     * Get the first buffered range (part) of the video in seconds.\n     * @returns {TimeRanges} - First buffered range (part) of the video in seconds.\n     * @public\n     */\n\n  }, {\n    key: 'buffered',\n    get: function get() {\n      var bufferLength = 0;\n      var backBufferLength = 0;\n      var currentTime = 0;\n      if (this._api) {\n        var api = this._api;\n        backBufferLength = api.getBackBufferLength();\n        bufferLength = api.getBufferLength();\n        currentTime = api.currentTime ? api.currentTime : 0;\n      }\n      return {\n        length: 1,\n        start: function start() {\n          return currentTime - backBufferLength;\n        },\n        end: function end() {\n          return currentTime + bufferLength;\n        }\n      };\n    }\n\n    /**\n     * Set player muted state.\n     * @param {boolean} mute - The new mute value.\n     * @public\n     * @returns {void}\n     */\n\n  }, {\n    key: 'muted',\n    set: function set(mute) {\n      if (mute) {\n        this.volume = 0;\n        this._muted = true;\n        this._volumeBeforeMute = this.volume;\n      } else {\n        this._muted = false;\n        if (this._volumeBeforeMute) {\n          this.volume = this._volumeBeforeMute;\n        } else {\n          this.volume = 1;\n        }\n      }\n    }\n\n    /**\n     * Get player muted state.\n     * @returns {boolean} - The muted value of the video element.\n     * @public\n     */\n    ,\n    get: function get() {\n      return this.volume == 0;\n    }\n\n    /**\n     * Get the default mute value.\n     * @returns {boolean} - The defaultMuted of the video element.\n     * @public\n     */\n\n  }, {\n    key: 'defaultMuted',\n    get: function get() {\n      return false;\n    }\n  }, {\n    key: 'ended',\n    get: function get() {\n      if (this._api) {\n        return this._api.ended;\n      }\n      return false;\n    }\n  }]);\n\n  return Flash;\n}(_playkitJs.FakeEventTarget);\n\nFlash._hlsMimeTypes = ['application/x-mpegurl', 'application/vnd.apple.mpegurl', 'audio/mpegurl', 'audio/x-mpegurl', 'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\nFlash._logger = (0, _playkitJs.getLogger)('Flash');\nFlash.id = 'flash';\nexports.Flash = Flash;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FlashHLSAdapter = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _playkitJs = __webpack_require__(0);\n\nvar _flashApi = __webpack_require__(4);\n\nvar _defaultConfig = __webpack_require__(5);\n\nvar _defaultConfig2 = _interopRequireDefault(_defaultConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FlashHLSAdapter = function (_FakeEventTarget) {\n  _inherits(FlashHLSAdapter, _FakeEventTarget);\n\n  _createClass(FlashHLSAdapter, null, [{\n    key: 'getFlashCode',\n    value: function getFlashCode(swf, flashVars, params, attributes) {\n      var objTag = '<object type=\"application/x-shockwave-flash\" ';\n      var flashVarsString = '';\n      var paramsString = '';\n      var attrsString = '';\n\n      // Convert flash vars to string\n      if (flashVars) {\n        Object.getOwnPropertyNames(flashVars).forEach(function (key) {\n          flashVarsString += key + '=' + flashVars[key] + '&amp;';\n        });\n      }\n\n      // Add swf, flashVars, and other default params\n      params = _playkitJs.Utils.Object.mergeDeep({\n        movie: swf,\n        flashvars: flashVarsString,\n        // Required to talk to swf\n        allowScriptAccess: 'always',\n        // All should be default, but having security issues.\n        allowNetworking: 'all',\n        wmode: 'transparent',\n        bgColor: '#0',\n        quality: 'autohigh'\n      }, params);\n\n      // Create param tags string\n      Object.getOwnPropertyNames(params).forEach(function (key) {\n        paramsString += '<param name=\"' + key + '\" value=\"' + params[key] + '\" />';\n      });\n\n      attributes = _playkitJs.Utils.Object.mergeDeep({\n        // Add swf to attributes (need both for IE and Others to work)\n        data: swf,\n\n        // Default to 100% width/height\n        width: '100%',\n        height: '100%'\n      }, attributes);\n\n      // Create Attributes string\n      Object.getOwnPropertyNames(attributes).forEach(function (key) {\n        attrsString += key + '=\"' + attributes[key] + '\" ';\n      });\n\n      return '' + objTag + attrsString + '>' + paramsString + '</object>';\n    }\n  }]);\n\n  function FlashHLSAdapter(source, config, el) {\n    _classCallCheck(this, FlashHLSAdapter);\n\n    var _this = _possibleConstructorReturn(this, (FlashHLSAdapter.__proto__ || Object.getPrototypeOf(FlashHLSAdapter)).call(this));\n\n    _this._firstPlay = true;\n    _this._loadReported = false;\n    _this.paused = true;\n    _this.ended = false;\n    _this.seeking = false;\n\n    var flashConfig = _playkitJs.Utils.Object.getPropertyPath(config, 'playback.options.flash');\n    flashConfig = _playkitJs.Utils.Object.mergeDeep(_defaultConfig2.default, flashConfig);\n    _this._config = flashConfig;\n    _this._src = source;\n    _this._el = el;\n    _this._apiLoadPromise = new Promise(function (resolve) {\n      _this._apiLoadResolve = resolve;\n    });\n    return _this;\n  }\n\n  _createClass(FlashHLSAdapter, [{\n    key: 'destroy',\n    value: function destroy() {\n      if (this._el && this._el.parentNode) {\n        this._el.innerHTML = '';\n      }\n    }\n  }, {\n    key: 'attach',\n    value: function attach() {\n      var _this2 = this;\n\n      if (!this._config.flashvars) {\n        this._config.flashvars = {};\n      }\n      this._config.flashvars.callback = 'flashlsCallback';\n      this._el.innerHTML = FlashHLSAdapter.getFlashCode(this._config.swfUrl, this._config.flashvars, this._config.params, this._config.attributes);\n\n      var flashlsEvents = {\n        ready: function ready() {\n          _this2._api = new _flashApi.FlashAPI(_this2._el.firstElementChild);\n          if (_this2._initialVolume != null) {\n            _this2.volume(_this2._initialVolume);\n          }\n          if (_this2._config.debug) {\n            _this2._api.playerSetLogDebug(true);\n            _this2._api.playerSetLogDebug2(true);\n          }\n          _this2._apiLoadResolve();\n        },\n        levelLoaded: function levelLoaded(loadmetrics) {\n          if (!_this2._loadReported) {\n            _this2._trigger(_playkitJs.EventType.LOADED_DATA, loadmetrics);\n            _this2._trigger(_playkitJs.EventType.LOADED_METADATA, loadmetrics);\n            _this2._loadReported = true;\n          }\n        },\n        complete: function complete() {\n          _this2._firstPlay = true;\n          _this2.ended = true;\n          _this2._trigger(_playkitJs.EventType.ENDED);\n        },\n        position: function position(timemetrics) {\n          _this2.paused = false;\n          _this2.duration = timemetrics.duration;\n          _this2.buffer = timemetrics.buffer;\n          _this2.watched = timemetrics.watched;\n          if (_this2.currentTime != timemetrics.position || _this2.ended) {\n            _this2.currentTime = timemetrics.position;\n            _this2._trigger(_playkitJs.EventType.TIME_UPDATE, timemetrics);\n          }\n        },\n        error: function error(code, url, message) {\n          var error = new _playkitJs.Error(_playkitJs.Error.Severity.CRITICAL, _playkitJs.Error.Category.MEDIA, _playkitJs.Error.Code.VIDEO_ERROR, {\n            code: code,\n            extended: url,\n            message: message\n          });\n          _this2._trigger(_playkitJs.EventType.ERROR, error);\n        },\n        manifest: function manifest(duration, levels_) {\n          var audioTracks = _this2._api.getAudioTrackList();\n          var parsedAudioTracks = [];\n          if (audioTracks) {\n            for (var i = 0; i < audioTracks.length; i++) {\n              var settings = {\n                id: audioTracks[i].id,\n                active: audioTracks[i].isDefault,\n                label: audioTracks[i].title,\n                language: audioTracks[i].title, //TODO: Get language?!?\n                index: i\n              };\n              parsedAudioTracks.push(new _playkitJs.AudioTrack(settings));\n            }\n          }\n\n          var videoTracks = [];\n          for (var _i = 0; _i < levels_.length; _i++) {\n            // Create video tracks\n            var _settings = {\n              active: 0 === _i,\n              bandwidth: levels_[_i].bitrate,\n              width: levels_[_i].width,\n              height: levels_[_i].height,\n              language: '',\n              index: _i\n            };\n            videoTracks.push(new _playkitJs.VideoTrack(_settings));\n          }\n          if (_this2._resolveLoad) {\n            _this2._resolveLoad({ tracks: videoTracks.concat(parsedAudioTracks) });\n            _this2._resolveLoad = null;\n          }\n          _this2._trigger(_playkitJs.EventType.TRACKS_CHANGED, { tracks: videoTracks.concat(parsedAudioTracks) });\n        },\n        seekState: function seekState(newState) {\n          if (_this2._firstPlay) {\n            return;\n          }\n          if (newState === 'SEEKING') {\n            _this2.seeking = true;\n            _this2._trigger(_playkitJs.EventType.SEEKING);\n            _this2._trigger(_playkitJs.EventType.WAITING);\n          }\n          if (newState === 'SEEKED') {\n            _this2.seeking = false;\n            _this2._trigger(_playkitJs.EventType.SEEKED);\n          }\n        },\n        state: function state(newState) {\n          //IDLE/PLAYING/PAUSED/PLAYING_BUFFERING/PAUSED_BUFFERING\n          switch (newState) {\n            case 'IDLE':\n              return;\n            case 'PLAYING':\n              _this2._trigger(_playkitJs.EventType.PLAYING);\n              _this2._firstPlay = false;\n              break;\n            case 'PAUSED_BUFFERING':\n              _this2._trigger(_playkitJs.EventType.WAITING);\n              break;\n            case 'PAUSED':\n              _this2._trigger(_playkitJs.EventType.PAUSE);\n              _this2.paused = true;\n              break;\n          }\n        }\n      };\n      // Create a single global callback function and pass it's name\n      // to the SWF with the name `callback` in the FlashVars parameter.\n      window.flashlsCallback = function (eventName, args) {\n        if (flashlsEvents[eventName]) {\n          flashlsEvents[eventName].apply(null, args);\n        }\n      };\n      return this._el;\n    }\n  }, {\n    key: 'load',\n    value: function load(startTime) {\n      var _this3 = this;\n\n      this._loadPromise = new Promise(function (resolve) {\n        _this3._resolveLoad = resolve;\n        if (startTime) {\n          _this3._startTime = startTime;\n        }\n        _this3._apiLoadPromise.then(function () {\n          _this3._api.load(_this3._src.url);\n        });\n      });\n      return this._loadPromise;\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this4 = this;\n\n      this._apiLoadPromise.then(function () {\n        if (_this4._firstPlay) {\n          _this4.ended = false;\n          _this4._api.play(_this4._startTime ? _this4._startTime : -1);\n        } else {\n          _this4._api.resume();\n        }\n        _this4._trigger(_playkitJs.EventType.PLAY);\n      });\n    }\n  }, {\n    key: 'pause',\n    value: function pause() {\n      if (this._api) {\n        this._api.pause();\n      }\n    }\n  }, {\n    key: 'seek',\n    value: function seek(to) {\n      if (this._api) {\n        this._api.seek(to);\n      }\n    }\n  }, {\n    key: 'volume',\n    value: function volume(vol) {\n      if (this._api) {\n        this._api.volume(vol * 100);\n        this._trigger(_playkitJs.EventType.VOLUME_CHANGE);\n      } else {\n        this._initialVolume = vol;\n      }\n    }\n  }, {\n    key: 'getDuration',\n    value: function getDuration() {\n      if (this._api) {\n        return this._api.getDuration();\n      } else {\n        return Number.NaN;\n      }\n    }\n  }, {\n    key: 'selectAudioTrack',\n    value: function selectAudioTrack(audioTrack) {\n      if (this._api) {\n        this._api.setAudioTrack(audioTrack.id);\n        this._trigger(_playkitJs.EventType.AUDIO_TRACK_CHANGED, { selectedAudioTrack: audioTrack });\n      }\n    }\n  }, {\n    key: 'selectVideoTrack',\n    value: function selectVideoTrack(videoTrack) {\n      if (this._api) {\n        if (this.isABR()) {\n          this._trigger(_playkitJs.EventType.ABR_MODE_CHANGED, { mode: 'manual' });\n        }\n        this._api.setCurrentLevel(videoTrack.index);\n        this._trigger(_playkitJs.EventType.VIDEO_TRACK_CHANGED, { selectedVideoTrack: videoTrack });\n      }\n    }\n  }, {\n    key: 'setABR',\n    value: function setABR() {\n      if (this._api) {\n        this._api.setCurrentLevel(-1);\n        this._trigger(_playkitJs.EventType.ABR_MODE_CHANGED, { mode: 'auto' });\n      }\n    }\n  }, {\n    key: 'isABR',\n    value: function isABR() {\n      if (this._api) {\n        return this._api.getAutoLevel();\n      }\n      return false;\n    }\n  }, {\n    key: 'getBufferLength',\n    value: function getBufferLength() {\n      if (this._api) {\n        return this._api.getbufferLength();\n      }\n      return 0;\n    }\n  }, {\n    key: 'getBackBufferLength',\n    value: function getBackBufferLength() {\n      if (this._api) {\n        return this._api.getbackBufferLength();\n      }\n      return 0;\n    }\n  }, {\n    key: '_trigger',\n    value: function _trigger(name, payload) {\n      this.dispatchEvent(new _playkitJs.FakeEvent(name, payload));\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.paused = true;\n      this.ended = false;\n      this.seeking = false;\n      this.duration = null;\n      this.buffer = null;\n      this.watched = null;\n    }\n  }]);\n\n  return FlashHLSAdapter;\n}(_playkitJs.FakeEventTarget);\n\nexports.FlashHLSAdapter = FlashHLSAdapter;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar FlashAPI = function () {\n  function FlashAPI(flashObject) {\n    _classCallCheck(this, FlashAPI);\n\n    this.flashObject = flashObject;\n  }\n\n  _createClass(FlashAPI, [{\n    key: \"load\",\n    value: function load(url) {\n      this.flashObject.playerLoad(url);\n    }\n  }, {\n    key: \"play\",\n    value: function play(offset) {\n      this.flashObject.playerPlay(offset);\n    }\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this.flashObject.playerPause();\n    }\n  }, {\n    key: \"resume\",\n    value: function resume() {\n      this.flashObject.playerResume();\n    }\n  }, {\n    key: \"seek\",\n    value: function seek(offset) {\n      this.flashObject.playerSeek(offset);\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.flashObject.playerStop();\n    }\n  }, {\n    key: \"volume\",\n    value: function volume(_volume) {\n      this.flashObject.playerVolume(_volume);\n    }\n  }, {\n    key: \"setCurrentLevel\",\n    value: function setCurrentLevel(level) {\n      this.flashObject.playerSetCurrentLevel(level);\n    }\n  }, {\n    key: \"setNextLevel\",\n    value: function setNextLevel(level) {\n      this.flashObject.playerSetNextLevel(level);\n    }\n  }, {\n    key: \"setLoadLevel\",\n    value: function setLoadLevel(level) {\n      this.flashObject.playerSetLoadLevel(level);\n    }\n  }, {\n    key: \"setMaxBufferLength\",\n    value: function setMaxBufferLength(len) {\n      this.flashObject.playerSetmaxBufferLength(len);\n    }\n  }, {\n    key: \"getPosition\",\n    value: function getPosition() {\n      return this.flashObject.getPosition();\n    }\n  }, {\n    key: \"getDuration\",\n    value: function getDuration() {\n      return this.flashObject.getDuration();\n    }\n  }, {\n    key: \"getbufferLength\",\n    value: function getbufferLength() {\n      return this.flashObject.getbufferLength();\n    }\n  }, {\n    key: \"getbackBufferLength\",\n    value: function getbackBufferLength() {\n      return this.flashObject.getbackBufferLength();\n    }\n  }, {\n    key: \"getLowBufferLength\",\n    value: function getLowBufferLength() {\n      return this.flashObject.getlowBufferLength();\n    }\n  }, {\n    key: \"getMinBufferLength\",\n    value: function getMinBufferLength() {\n      return this.flashObject.getminBufferLength();\n    }\n  }, {\n    key: \"getMaxBufferLength\",\n    value: function getMaxBufferLength() {\n      return this.flashObject.getmaxBufferLength();\n    }\n  }, {\n    key: \"getLevels\",\n    value: function getLevels() {\n      return this.flashObject.getLevels();\n    }\n  }, {\n    key: \"getAutoLevel\",\n    value: function getAutoLevel() {\n      return this.flashObject.getAutoLevel();\n    }\n  }, {\n    key: \"getCurrentLevel\",\n    value: function getCurrentLevel() {\n      return this.flashObject.getCurrentLevel();\n    }\n  }, {\n    key: \"getNextLevel\",\n    value: function getNextLevel() {\n      return this.flashObject.getNextLevel();\n    }\n  }, {\n    key: \"getLoadLevel\",\n    value: function getLoadLevel() {\n      return this.flashObject.getLoadLevel();\n    }\n  }, {\n    key: \"getAudioTrackList\",\n    value: function getAudioTrackList() {\n      return this.flashObject.getAudioTrackList();\n    }\n  }, {\n    key: \"getStats\",\n    value: function getStats() {\n      return this.flashObject.getStats();\n    }\n  }, {\n    key: \"setAudioTrack\",\n    value: function setAudioTrack(trackId) {\n      this.flashObject.playerSetAudioTrack(trackId);\n    }\n  }, {\n    key: \"playerSetLogDebug\",\n    value: function playerSetLogDebug(state) {\n      this.flashObject.playerSetLogDebug(state);\n    }\n  }, {\n    key: \"getLogDebug\",\n    value: function getLogDebug() {\n      return this.flashObject.getLogDebug();\n    }\n  }, {\n    key: \"playerSetLogDebug2\",\n    value: function playerSetLogDebug2(state) {\n      this.flashObject.playerSetLogDebug2(state);\n    }\n  }, {\n    key: \"getLogDebug2\",\n    value: function getLogDebug2() {\n      return this.flashObject.getLogDebug2();\n    }\n  }, {\n    key: \"playerSetUseHardwareVideoDecoder\",\n    value: function playerSetUseHardwareVideoDecoder(state) {\n      this.flashObject.playerSetUseHardwareVideoDecoder(state);\n    }\n  }, {\n    key: \"getUseHardwareVideoDecoder\",\n    value: function getUseHardwareVideoDecoder() {\n      return this.flashObject.getUseHardwareVideoDecoder();\n    }\n  }, {\n    key: \"playerSetflushLiveURLCache\",\n    value: function playerSetflushLiveURLCache(state) {\n      this.flashObject.playerSetflushLiveURLCache(state);\n    }\n  }, {\n    key: \"getflushLiveURLCache\",\n    value: function getflushLiveURLCache() {\n      return this.flashObject.getflushLiveURLCache();\n    }\n  }, {\n    key: \"playerSetJSURLStream\",\n    value: function playerSetJSURLStream(state) {\n      this.flashObject.playerSetJSURLStream(state);\n    }\n  }, {\n    key: \"getJSURLStream\",\n    value: function getJSURLStream() {\n      return this.flashObject.getJSURLStream();\n    }\n  }, {\n    key: \"playerCapLeveltoStage\",\n    value: function playerCapLeveltoStage(state) {\n      this.flashObject.playerCapLeveltoStage(state);\n    }\n  }, {\n    key: \"getCapLeveltoStage\",\n    value: function getCapLeveltoStage() {\n      return this.flashObject.getCapLeveltoStage();\n    }\n  }, {\n    key: \"playerSetAutoLevelCapping\",\n    value: function playerSetAutoLevelCapping(level) {\n      this.flashObject.playerSetAutoLevelCapping(level);\n    }\n  }, {\n    key: \"getAutoLevelCapping\",\n    value: function getAutoLevelCapping() {\n      return this.flashObject.getAutoLevelCapping();\n    }\n  }]);\n\n  return FlashAPI;\n}();\n\nexports.FlashAPI = FlashAPI;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\nmodule.exports = {\"swfUrl\":\"https://cdnapisec.kaltura.com/html5/static/flashhls/v0.4.4.24/flashlsChromeless.swf?inline=1\"}\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// playkit-flash.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7bda0d6c532cba472a51","module.exports = __WEBPACK_EXTERNAL_MODULE_0__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"commonjs\":\"playkit-js\",\"commonjs2\":\"playkit-js\",\"amd\":\"playkit-js\",\"root\":[\"KalturaPlayer\",\"core\"]}\n// module id = 0\n// module chunks = 0","// @flow\nimport {registerEngine} from 'playkit-js';\nimport {Flash} from './flash';\n\ndeclare var __VERSION__: string;\ndeclare var __NAME__: string;\n\nexport {Flash as Engine};\nexport {__VERSION__ as VERSION, __NAME__ as NAME};\n\nif (Flash.isSupported()) {\n  registerEngine(Flash.id, Flash);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","// @flow\nimport {EventManager, EventType, FakeEvent, FakeEventTarget, getLogger, IEngine, Utils} from 'playkit-js';\nimport {FlashHLSAdapter} from './flashhls-adapter';\n\nclass Flash extends FakeEventTarget implements IEngine {\n  /**\n   * The supported mime types by FLASH HLS Engine.\n   * @member {Array<string>} _hlsMimeType\n   * @static\n   * @private\n   */\n  static _hlsMimeTypes: Array<string> = [\n    'application/x-mpegurl',\n    'application/vnd.apple.mpegurl',\n    'audio/mpegurl',\n    'audio/x-mpegurl',\n    'video/x-mpegurl',\n    'video/mpegurl',\n    'application/mpegurl'\n  ];\n\n  /**\n   * The video element.\n   * @type {HTMLDivElement}\n   * @private\n   */\n  _el: ?HTMLDivElement;\n\n  _api: ?FlashHLSAdapter;\n\n  _src: ?string;\n\n  _loadPromise: Promise<*>;\n\n  _volume: ?number;\n\n  _volumeBeforeMute: ?number;\n\n  /**\n   * The event manager of the engine.\n   * @type {EventManager}\n   * @private\n   */\n  _eventManager: EventManager;\n\n  _srcToLoad: ?string;\n\n  _muted: boolean;\n\n  /**\n   * The Flash class logger.\n   * @type {any}\n   * @static\n   * @private\n   */\n  static _logger: any = getLogger('Flash');\n\n  static id: string = 'flash';\n\n  /**\n   * Factory method to create an engine.\n   * @param {PKMediaSourceObject} source - The selected source object.\n   * @param {Object} config - The player configuration.\n   * @returns {IEngine} - New instance of the run time engine.\n   * @public\n   * @static\n   */\n  static createEngine(source: PKMediaSourceObject, config: Object): IEngine {\n    return new this(source, config);\n  }\n\n  /**\n   * Checks if the engine can play a given source.\n   * @param {PKMediaSourceObject} source - The source object to check.\n   * @param {boolean} preferNative - prefer native flag\n   * @returns {boolean} - Whether the engine can play the source.\n   * @public\n   * @static\n   */\n  // eslint-disable-next-line no-unused-vars\n  static canPlaySource(source: PKMediaSourceObject, preferNative: boolean): boolean {\n    if (source && source.mimetype) {\n      return typeof source.mimetype === 'string' ? Flash._hlsMimeTypes.includes(source.mimetype.toLowerCase()) : false;\n    }\n    return false;\n  }\n\n  /**\n   * empty implementation\n   * @returns {void}\n   * @private\n   * @public\n   */\n  static prepareVideoElement(): void {}\n\n  /**\n   * Checks if flash is supported.\n   * @returns {boolean} - Whether the flash engine is supported.\n   */\n  static isSupported(): boolean {\n    let version = '0,0,0';\n    try {\n      version = new window.ActiveXObject('ShockwaveFlash.ShockwaveFlash')\n        .GetVariable('$version')\n        .replace(/\\D+/g, ',')\n        .match(/^,?(.+),?$/)[1];\n    } catch (e) {\n      try {\n        if (window.navigator.mimeTypes['application/x-shockwave-flash'].enabledPlugin) {\n          version = (window.navigator.plugins['Shockwave Flash 2.0'] || window.navigator.plugins['Shockwave Flash']).description\n            .replace(/\\D+/g, ',')\n            .match(/^,?(.+),?$/)[1];\n        }\n      } catch (err) {\n        // ignore\n      }\n    }\n    let majorVersion: number = parseInt(version.split(',')[0]);\n    return majorVersion >= 10;\n  }\n\n  /**\n   * Runs the flash capabilities tests.\n   * @returns {void}\n   * @public\n   * @static\n   */\n  static runCapabilities(): void {}\n\n  /**\n   * Gets the flash capabilities.\n   * @return {Promise<Object>} - The flash capabilities object.\n   * @public\n   * @static\n   */\n  static getCapabilities(): Promise<Object> {\n    return Promise.resolve({[Flash.id]: {autoplay: true, mutedAutoPlay: true}});\n  }\n\n  /**\n   * @constructor\n   * @param {PKMediaSourceObject} source - The selected source object.\n   * @param {Object} config - The player configuration.\n   */\n  constructor(source: PKMediaSourceObject, config: Object) {\n    super();\n    this._el = Utils.Dom.createElement('div');\n    this._init(source, config);\n  }\n\n  hideTextTrack(): void {}\n  _init(source: PKMediaSourceObject, config: Object): void {\n    this._eventManager = new EventManager();\n    this._api = new FlashHLSAdapter(source, config, this._el);\n    this._api.attach();\n    this._addBindings();\n    this._srcToLoad = source.url;\n  }\n\n  reset(): void {\n    if (this._api) {\n      this._api.reset();\n    }\n    this._src = null;\n    this._volume = null;\n    this._volumeBeforeMute = null;\n    this._srcToLoad = null;\n  }\n\n  /**\n   * Restores the engine.\n   * @param {PKMediaSourceObject} source - The selected source object.\n   * @param {Object} config - The player configuration.\n   * @returns {void}\n   */\n  restore(source: PKMediaSourceObject, config: Object): void {\n    this.destroy();\n    this._init(source, config);\n  }\n\n  /**\n   * get the playback rates\n   * @return {number[]} - playback rates\n   */\n  get playbackRates(): Array<number> {\n    return [1];\n  }\n\n  /**\n   * Sets the current playback speed of the audio/video.\n   * @param {Number} playbackRate - The playback speed value.\n   * @public\n   * @returns {void}\n   */\n  set playbackRate(playbackRate: number): void {\n    if (playbackRate != 1) {\n      Flash._logger.debug('This engine doesnt support playback rate <> 1');\n    }\n  }\n\n  /**\n   * Gets the current playback speed of the audio/video.\n   * @returns {Number} - The current playback speed value.\n   * @public\n   */\n  get playbackRate(): number {\n    return 1;\n  }\n\n  /**\n   * Gets the default playback speed of the audio/video.\n   * @returns {Number} - The default playback speed value.\n   * @public\n   */\n  get defaultPlaybackRate(): number {\n    return 1;\n  }\n\n  /**\n   * Get the engine's id\n   * @public\n   * @returns {string} the engine's id\n   */\n  get id(): string {\n    return Flash.id;\n  }\n\n  destroy(): void {\n    if (this._api) {\n      this._api.destroy();\n      this._eventManager.destroy();\n      this.reset();\n    }\n  }\n\n  _addBindings(): void {\n    if (this._api) {\n      let events = [\n        EventType.ABR_MODE_CHANGED,\n        EventType.TRACKS_CHANGED,\n        EventType.ERROR,\n        EventType.PLAYING,\n        EventType.TIME_UPDATE,\n        EventType.PAUSE,\n        EventType.LOADED_METADATA,\n        EventType.LOADED_DATA,\n        EventType.PLAY,\n        EventType.VOLUME_CHANGE,\n        EventType.WAITING,\n        EventType.SEEKING,\n        EventType.SEEKED,\n        EventType.ENDED,\n        EventType.VIDEO_TRACK_CHANGED,\n        EventType.AUDIO_TRACK_CHANGED\n      ];\n      events.forEach(eventName => {\n        this._eventManager.listen(this._api, eventName, (event: FakeEvent) => this.dispatchEvent(event));\n      });\n    } else {\n      Flash._logger.warn('Unable to attach flash - api is missing');\n    }\n  }\n\n  /**\n   * @returns {HTMLDivElement} - The flash wrapper element.\n   * @public\n   */\n  getVideoElement(): ?HTMLDivElement {\n    return this._el;\n  }\n\n  /**\n   * Select an audio track\n   * @function selectAudioTrack\n   * @param {AudioTrack} audioTrack - the  audio track to select\n   * @returns {void}\n   * @public\n   */\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (this._api) {\n      this._api.selectAudioTrack(audioTrack);\n    }\n  }\n\n  /**\n   * Select a video track\n   * @function selectVideoTrack\n   * @param {VideoTrack} videoTrack - the track to select\n   * @returns {void}\n   * @public\n   */\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (this._api) {\n      this._api.selectVideoTrack(videoTrack);\n    }\n  }\n\n  /**\n   * Enables adaptive bitrate\n   * @function enableAdaptiveBitrate\n   * @returns {void}\n   * @public\n   */\n  enableAdaptiveBitrate(): void {\n    if (this._api) {\n      this._api.setABR();\n    }\n  }\n\n  /**\n   * Checking if adaptive bitrate switching is enabled.\n   * For progressive playback will always returns false.\n   * For adaptive playback will always returns true.\n   * @function isAdaptiveBitrateEnabled\n   * @returns {boolean} - Whether adaptive bitrate is enabled.\n   * @public\n   */\n  isAdaptiveBitrateEnabled(): boolean {\n    let isAdaptive: boolean = false;\n    if (this._api) {\n      isAdaptive = this._api.isABR();\n    }\n    return isAdaptive;\n  }\n\n  /**\n   * Set a source.\n   * @param {string} source - Source to set.\n   * @public\n   * @returns {void}\n   */\n  set src(source: string): void {\n    this._src = source;\n  }\n\n  /**\n   * Get the source url.\n   * @returns {string} - The source url.\n   * @public\n   */\n  get src(): string {\n    if (this._src) {\n      return this._src;\n    }\n    return '';\n  }\n\n  /**\n   * Load media.\n   * @param {number} startTime - Optional time to start the video from.\n   * @public\n   * @returns {Promise<Object>} - The loaded data\n   */\n  load(startTime: ?number): Promise<Object> {\n    if (!this._api) {\n      Flash._logger.warn('Missing API - Flash is not ready');\n      return Promise.reject('Flash is not ready');\n    }\n    this._src = this._srcToLoad;\n    this._loadPromise = this._api.load(startTime);\n    return this._loadPromise;\n  }\n\n  /**\n   * Start/resume playback.\n   * @public\n   * @returns {void}\n   */\n  play(): void {\n    this._loadPromise.then(() => {\n      if (this._api) {\n        this._api.play();\n      }\n    });\n  }\n\n  pause(): void {\n    if (this._api) {\n      this._api.pause();\n    }\n  }\n\n  /**\n   * Checking if the current playback is live.\n   * @function isLive\n   * @returns {boolean} - Whether playback is live.\n   * @public\n   */\n  isLive(): boolean {\n    return false;\n  }\n\n  /**\n   * Get the current time in seconds.\n   * @returns {Number} - The current playback time.\n   * @public\n   */\n  get currentTime(): number {\n    if (this._api && this._api.currentTime) {\n      return this._api.currentTime;\n    }\n    return 0;\n  }\n\n  /**\n   * Set the current time in seconds.\n   * @param {Number} to - The number to set in seconds.\n   * @public\n   * @returns {void}\n   */\n  set currentTime(to: number): void {\n    if (this._api) {\n      this._api.seek(to);\n    }\n  }\n\n  /**\n   * Get the duration in seconds.\n   * @returns {Number} - The playback duration.\n   * @public\n   */\n  get duration(): number {\n    let duration: number = 0;\n    if (this._api) {\n      duration = this._api.duration ? this._api.duration : this._api.getDuration();\n    }\n    return duration;\n  }\n\n  /**\n   * Set playback volume.\n   * @param {Number} vol - The volume to set.\n   * @public\n   * @returns {void}\n   */\n  set volume(vol: number): void {\n    if (this._muted) {\n      this._volumeBeforeMute = vol;\n    } else {\n      this._volume = vol;\n      if (this._api) {\n        this._api.volume(vol);\n      }\n    }\n  }\n\n  /**\n   * Get playback volume.\n   * @returns {Number} - The volume value of the video element.\n   * @public\n   */\n  get volume(): number {\n    return this._volume || 0;\n  }\n\n  /**\n   * Get paused state.\n   * @returns {boolean} - The paused value of the video element.\n   * @public\n   */\n  get paused(): boolean {\n    if (this._api) {\n      return this._api.paused;\n    }\n    return true;\n  }\n\n  /**\n   * Get seeking state.\n   * @returns {boolean} - The seeking value of the video element.\n   * @public\n   */\n  get seeking(): boolean {\n    if (this._api) {\n      return this._api.seeking;\n    }\n    return false;\n  }\n\n  /**\n   * Get the first seekable range (part) of the video in seconds.\n   * @returns {TimeRanges} - First seekable range (part) of the video in seconds.\n   * @public\n   */\n  get seekable(): any {\n    return this.buffered;\n  }\n\n  /**\n   * Get the first played range (part) of the video in seconds.\n   * @returns {TimeRanges} - First played range (part) of the video in seconds.\n   * @public\n   */\n  get played(): any {\n    return {\n      length: 1,\n      start: () => {\n        return 0;\n      },\n      end: () => {\n        if (this._api) {\n          return this._api.watched;\n        } else return 0;\n      }\n    };\n  }\n\n  /**\n   * Get the first buffered range (part) of the video in seconds.\n   * @returns {TimeRanges} - First buffered range (part) of the video in seconds.\n   * @public\n   */\n  get buffered(): any {\n    let bufferLength: number = 0;\n    let backBufferLength: number = 0;\n    let currentTime: number = 0;\n    if (this._api) {\n      let api = this._api;\n      backBufferLength = api.getBackBufferLength();\n      bufferLength = api.getBufferLength();\n      currentTime = api.currentTime ? api.currentTime : 0;\n    }\n    return {\n      length: 1,\n      start: () => {\n        return currentTime - backBufferLength;\n      },\n      end: () => {\n        return currentTime + bufferLength;\n      }\n    };\n  }\n\n  /**\n   * Set player muted state.\n   * @param {boolean} mute - The new mute value.\n   * @public\n   * @returns {void}\n   */\n  set muted(mute: boolean): void {\n    if (mute) {\n      this.volume = 0;\n      this._muted = true;\n      this._volumeBeforeMute = this.volume;\n    } else {\n      this._muted = false;\n      if (this._volumeBeforeMute) {\n        this.volume = this._volumeBeforeMute;\n      } else {\n        this.volume = 1;\n      }\n    }\n  }\n\n  /**\n   * Get player muted state.\n   * @returns {boolean} - The muted value of the video element.\n   * @public\n   */\n  get muted(): boolean {\n    return this.volume == 0;\n  }\n\n  /**\n   * Get the default mute value.\n   * @returns {boolean} - The defaultMuted of the video element.\n   * @public\n   */\n  get defaultMuted(): boolean {\n    return false;\n  }\n\n  /**\n   * Get the start time of DVR window in live playback in seconds.\n   * @returns {Number} - start time of DVR window.\n   * @public\n   */\n  getStartTimeOfDvrWindow(): number {\n    return 0;\n  }\n\n  /**\n   * The ended property returns whether the playback of the audio/video has ended.\n   * @returns {boolean} - The ended value.\n   * @public\n   */\n  get ended(): boolean {\n    if (this._api) {\n      return this._api.ended;\n    }\n    return false;\n  }\n\n  /**\n   * Seeking to live edge.\n   * @function seekToLiveEdge\n   * @returns {void}\n   * @public\n   */\n  seekToLiveEdge(): void {\n    this.currentTime = this.duration - 1;\n  }\n}\n\nexport {Flash};\n\n\n\n// WEBPACK FOOTER //\n// ./flash.js","// @flow\nimport {AudioTrack, Error, EventType, FakeEvent, FakeEventTarget, Utils, VideoTrack} from 'playkit-js';\nimport {FlashAPI} from './flash-api';\nimport DefaultConfig from './default-config';\n\nclass FlashHLSAdapter extends FakeEventTarget {\n  _config: Object;\n  _el: HTMLDivElement;\n  _api: FlashAPI;\n  _src: PKMediaSourceObject;\n  _startTime: number;\n  _firstPlay: boolean = true;\n  _initialVolume: number;\n  _loadReported: boolean = false;\n  paused: boolean = true;\n  ended: boolean = false;\n  seeking: boolean = false;\n  duration: ?number;\n  buffer: ?number;\n  watched: ?number;\n  currentTime: ?number;\n  _apiLoadPromise: Promise<*>;\n  _apiLoadResolve: any;\n\n  static getFlashCode(swf: string, flashVars: Object, params: Object, attributes: Object): string {\n    const objTag = '<object type=\"application/x-shockwave-flash\" ';\n    let flashVarsString = '';\n    let paramsString = '';\n    let attrsString = '';\n\n    // Convert flash vars to string\n    if (flashVars) {\n      Object.getOwnPropertyNames(flashVars).forEach(function(key) {\n        flashVarsString += `${key}=${flashVars[key]}&amp;`;\n      });\n    }\n\n    // Add swf, flashVars, and other default params\n    params = Utils.Object.mergeDeep(\n      {\n        movie: swf,\n        flashvars: flashVarsString,\n        // Required to talk to swf\n        allowScriptAccess: 'always',\n        // All should be default, but having security issues.\n        allowNetworking: 'all',\n        wmode: 'transparent',\n        bgColor: '#0',\n        quality: 'autohigh'\n      },\n      params\n    );\n\n    // Create param tags string\n    Object.getOwnPropertyNames(params).forEach(function(key) {\n      paramsString += `<param name=\"${key}\" value=\"${params[key]}\" />`;\n    });\n\n    attributes = Utils.Object.mergeDeep(\n      {\n        // Add swf to attributes (need both for IE and Others to work)\n        data: swf,\n\n        // Default to 100% width/height\n        width: '100%',\n        height: '100%'\n      },\n      attributes\n    );\n\n    // Create Attributes string\n    Object.getOwnPropertyNames(attributes).forEach(function(key) {\n      attrsString += `${key}=\"${attributes[key]}\" `;\n    });\n\n    return `${objTag}${attrsString}>${paramsString}</object>`;\n  }\n\n  constructor(source: PKMediaSourceObject, config: Object, el: HTMLDivElement) {\n    super();\n    let flashConfig = Utils.Object.getPropertyPath(config, 'playback.options.flash');\n    flashConfig = Utils.Object.mergeDeep(DefaultConfig, flashConfig);\n    this._config = flashConfig;\n    this._src = source;\n    this._el = el;\n    this._apiLoadPromise = new Promise(resolve => {\n      this._apiLoadResolve = resolve;\n    });\n  }\n\n  destroy(): void {\n    if (this._el && this._el.parentNode) {\n      this._el.innerHTML = '';\n    }\n  }\n\n  attach(): HTMLDivElement {\n    if (!this._config.flashvars) {\n      this._config.flashvars = {};\n    }\n    this._config.flashvars.callback = 'flashlsCallback';\n    this._el.innerHTML = FlashHLSAdapter.getFlashCode(this._config.swfUrl, this._config.flashvars, this._config.params, this._config.attributes);\n\n    let flashlsEvents = {\n      ready: () => {\n        this._api = new FlashAPI(this._el.firstElementChild);\n        if (this._initialVolume != null) {\n          this.volume(this._initialVolume);\n        }\n        if (this._config.debug) {\n          this._api.playerSetLogDebug(true);\n          this._api.playerSetLogDebug2(true);\n        }\n        this._apiLoadResolve();\n      },\n      levelLoaded: loadmetrics => {\n        if (!this._loadReported) {\n          this._trigger(EventType.LOADED_DATA, loadmetrics);\n          this._trigger(EventType.LOADED_METADATA, loadmetrics);\n          this._loadReported = true;\n        }\n      },\n      complete: () => {\n        this._firstPlay = true;\n        this.ended = true;\n        this._trigger(EventType.ENDED);\n      },\n      position: (timemetrics: Object) => {\n        this.paused = false;\n        this.duration = timemetrics.duration;\n        this.buffer = timemetrics.buffer;\n        this.watched = timemetrics.watched;\n        if (this.currentTime != timemetrics.position || this.ended) {\n          this.currentTime = timemetrics.position;\n          this._trigger(EventType.TIME_UPDATE, timemetrics);\n        }\n      },\n      error: (code, url, message) => {\n        const error = new Error(Error.Severity.CRITICAL, Error.Category.MEDIA, Error.Code.VIDEO_ERROR, {\n          code: code,\n          extended: url,\n          message: message\n        });\n        this._trigger(EventType.ERROR, error);\n      },\n      manifest: (duration, levels_) => {\n        let audioTracks = this._api.getAudioTrackList();\n        const parsedAudioTracks = [];\n        if (audioTracks) {\n          for (let i = 0; i < audioTracks.length; i++) {\n            const settings = {\n              id: audioTracks[i].id,\n              active: audioTracks[i].isDefault,\n              label: audioTracks[i].title,\n              language: audioTracks[i].title, //TODO: Get language?!?\n              index: i\n            };\n            parsedAudioTracks.push(new AudioTrack(settings));\n          }\n        }\n\n        let videoTracks = [];\n        for (let i = 0; i < levels_.length; i++) {\n          // Create video tracks\n          let settings = {\n            active: 0 === i,\n            bandwidth: levels_[i].bitrate,\n            width: levels_[i].width,\n            height: levels_[i].height,\n            language: '',\n            index: i\n          };\n          videoTracks.push(new VideoTrack(settings));\n        }\n        if (this._resolveLoad) {\n          this._resolveLoad({tracks: videoTracks.concat(parsedAudioTracks)});\n          this._resolveLoad = null;\n        }\n        this._trigger(EventType.TRACKS_CHANGED, {tracks: videoTracks.concat(parsedAudioTracks)});\n      },\n      seekState: newState => {\n        if (this._firstPlay) {\n          return;\n        }\n        if (newState === 'SEEKING') {\n          this.seeking = true;\n          this._trigger(EventType.SEEKING);\n          this._trigger(EventType.WAITING);\n        }\n        if (newState === 'SEEKED') {\n          this.seeking = false;\n          this._trigger(EventType.SEEKED);\n        }\n      },\n      state: newState => {\n        //IDLE/PLAYING/PAUSED/PLAYING_BUFFERING/PAUSED_BUFFERING\n        switch (newState) {\n          case 'IDLE':\n            return;\n          case 'PLAYING':\n            this._trigger(EventType.PLAYING);\n            this._firstPlay = false;\n            break;\n          case 'PAUSED_BUFFERING':\n            this._trigger(EventType.WAITING);\n            break;\n          case 'PAUSED':\n            this._trigger(EventType.PAUSE);\n            this.paused = true;\n            break;\n        }\n      }\n    };\n    // Create a single global callback function and pass it's name\n    // to the SWF with the name `callback` in the FlashVars parameter.\n    window.flashlsCallback = function(eventName, args) {\n      if (flashlsEvents[eventName]) {\n        flashlsEvents[eventName].apply(null, args);\n      }\n    };\n    return this._el;\n  }\n\n  load(startTime: ?number): Promise<Object> {\n    this._loadPromise = new Promise(resolve => {\n      this._resolveLoad = resolve;\n      if (startTime) {\n        this._startTime = startTime;\n      }\n      this._apiLoadPromise.then(() => {\n        this._api.load(this._src.url);\n      });\n    });\n    return this._loadPromise;\n  }\n\n  play() {\n    this._apiLoadPromise.then(() => {\n      if (this._firstPlay) {\n        this.ended = false;\n        this._api.play(this._startTime ? this._startTime : -1);\n      } else {\n        this._api.resume();\n      }\n      this._trigger(EventType.PLAY);\n    });\n  }\n\n  pause() {\n    if (this._api) {\n      this._api.pause();\n    }\n  }\n\n  seek(to: number): void {\n    if (this._api) {\n      this._api.seek(to);\n    }\n  }\n\n  volume(vol: number): void {\n    if (this._api) {\n      this._api.volume(vol * 100);\n      this._trigger(EventType.VOLUME_CHANGE);\n    } else {\n      this._initialVolume = vol;\n    }\n  }\n\n  getDuration(): number {\n    if (this._api) {\n      return this._api.getDuration();\n    } else {\n      return Number.NaN;\n    }\n  }\n\n  selectAudioTrack(audioTrack: AudioTrack): void {\n    if (this._api) {\n      this._api.setAudioTrack(audioTrack.id);\n      this._trigger(EventType.AUDIO_TRACK_CHANGED, {selectedAudioTrack: audioTrack});\n    }\n  }\n\n  selectVideoTrack(videoTrack: VideoTrack): void {\n    if (this._api) {\n      if (this.isABR()) {\n        this._trigger(EventType.ABR_MODE_CHANGED, {mode: 'manual'});\n      }\n      this._api.setCurrentLevel(videoTrack.index);\n      this._trigger(EventType.VIDEO_TRACK_CHANGED, {selectedVideoTrack: videoTrack});\n    }\n  }\n\n  setABR(): void {\n    if (this._api) {\n      this._api.setCurrentLevel(-1);\n      this._trigger(EventType.ABR_MODE_CHANGED, {mode: 'auto'});\n    }\n  }\n\n  isABR(): boolean {\n    if (this._api) {\n      return this._api.getAutoLevel();\n    }\n    return false;\n  }\n\n  getBufferLength(): number {\n    if (this._api) {\n      return this._api.getbufferLength();\n    }\n    return 0;\n  }\n\n  getBackBufferLength(): number {\n    if (this._api) {\n      return this._api.getbackBufferLength();\n    }\n    return 0;\n  }\n\n  _trigger(name: string, payload?: Object): void {\n    this.dispatchEvent(new FakeEvent(name, payload));\n  }\n\n  reset(): void {\n    this.paused = true;\n    this.ended = false;\n    this.seeking = false;\n    this.duration = null;\n    this.buffer = null;\n    this.watched = null;\n  }\n}\n\nexport {FlashHLSAdapter};\n\n\n\n// WEBPACK FOOTER //\n// ./flashhls-adapter.js","// @flow\nclass FlashAPI {\n  flashObject: any;\n\n  constructor(flashObject: any): void {\n    this.flashObject = flashObject;\n  }\n\n  load(url: string): void {\n    this.flashObject.playerLoad(url);\n  }\n\n  play(offset: number): void {\n    this.flashObject.playerPlay(offset);\n  }\n\n  pause(): void {\n    this.flashObject.playerPause();\n  }\n\n  resume(): void {\n    this.flashObject.playerResume();\n  }\n\n  seek(offset: number): void {\n    this.flashObject.playerSeek(offset);\n  }\n\n  stop(): void {\n    this.flashObject.playerStop();\n  }\n\n  volume(volume: number): void {\n    this.flashObject.playerVolume(volume);\n  }\n\n  setCurrentLevel(level: number): void {\n    this.flashObject.playerSetCurrentLevel(level);\n  }\n\n  setNextLevel(level: number): void {\n    this.flashObject.playerSetNextLevel(level);\n  }\n\n  setLoadLevel(level: number): void {\n    this.flashObject.playerSetLoadLevel(level);\n  }\n\n  setMaxBufferLength(len: number): void {\n    this.flashObject.playerSetmaxBufferLength(len);\n  }\n\n  getPosition(): number {\n    return this.flashObject.getPosition();\n  }\n\n  getDuration(): number {\n    return this.flashObject.getDuration();\n  }\n\n  getbufferLength(): number {\n    return this.flashObject.getbufferLength();\n  }\n\n  getbackBufferLength(): number {\n    return this.flashObject.getbackBufferLength();\n  }\n\n  getLowBufferLength(): number {\n    return this.flashObject.getlowBufferLength();\n  }\n\n  getMinBufferLength(): number {\n    return this.flashObject.getminBufferLength();\n  }\n\n  getMaxBufferLength(): number {\n    return this.flashObject.getmaxBufferLength();\n  }\n\n  getLevels(): any {\n    return this.flashObject.getLevels();\n  }\n\n  getAutoLevel(): any {\n    return this.flashObject.getAutoLevel();\n  }\n\n  getCurrentLevel(): number {\n    return this.flashObject.getCurrentLevel();\n  }\n\n  getNextLevel(): number {\n    return this.flashObject.getNextLevel();\n  }\n\n  getLoadLevel(): number {\n    return this.flashObject.getLoadLevel();\n  }\n\n  getAudioTrackList(): Array<Object> {\n    return this.flashObject.getAudioTrackList();\n  }\n\n  getStats(): any {\n    return this.flashObject.getStats();\n  }\n\n  setAudioTrack(trackId: number): void {\n    this.flashObject.playerSetAudioTrack(trackId);\n  }\n\n  playerSetLogDebug(state: boolean): void {\n    this.flashObject.playerSetLogDebug(state);\n  }\n\n  getLogDebug(): any {\n    return this.flashObject.getLogDebug();\n  }\n\n  playerSetLogDebug2(state: boolean): void {\n    this.flashObject.playerSetLogDebug2(state);\n  }\n\n  getLogDebug2(): any {\n    return this.flashObject.getLogDebug2();\n  }\n\n  playerSetUseHardwareVideoDecoder(state: boolean): void {\n    this.flashObject.playerSetUseHardwareVideoDecoder(state);\n  }\n\n  getUseHardwareVideoDecoder(): boolean {\n    return this.flashObject.getUseHardwareVideoDecoder();\n  }\n\n  playerSetflushLiveURLCache(state: boolean): void {\n    this.flashObject.playerSetflushLiveURLCache(state);\n  }\n\n  getflushLiveURLCache(): any {\n    return this.flashObject.getflushLiveURLCache();\n  }\n\n  playerSetJSURLStream(state: boolean): void {\n    this.flashObject.playerSetJSURLStream(state);\n  }\n\n  getJSURLStream(): any {\n    return this.flashObject.getJSURLStream();\n  }\n\n  playerCapLeveltoStage(state: boolean): void {\n    this.flashObject.playerCapLeveltoStage(state);\n  }\n\n  getCapLeveltoStage(): any {\n    return this.flashObject.getCapLeveltoStage();\n  }\n\n  playerSetAutoLevelCapping(level: number): void {\n    this.flashObject.playerSetAutoLevelCapping(level);\n  }\n\n  getAutoLevelCapping(): number {\n    return this.flashObject.getAutoLevelCapping();\n  }\n}\n\nexport {FlashAPI};\n\n\n\n// WEBPACK FOOTER //\n// ./flash-api.js","module.exports = {\"swfUrl\":\"https://cdnapisec.kaltura.com/html5/static/flashhls/v0.4.4.24/flashlsChromeless.swf?inline=1\"}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./default-config.json\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}